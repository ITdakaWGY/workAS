# 服务器端口
server.port=8280
# 数据库设置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://asexam.rwlb.rds.aliyuncs.com:3306/dbsysup?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=asexam
spring.datasource.password=1234@abcd
# druid配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# druid参数调优（可选）
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 测试连接
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters
spring.datasource.filters=stat
# asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
spring.datasource.asyncInit=true
#打印sql
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# 开启驼峰映射
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false
# 返回map时，true:当查询数据为空时字段返回为null；false:不加这个查询数据为空时，字段将被隐藏
mybatis-plus.configuration.call-setters-on-nulls=true
# 自定义xml文件路径
mybatis-plus.mapper-locations=classpath:/mapper/*.xml
# 自定义xml文件中用到的实体类路径
mybatis-plus.type-aliases-package:com.as.android.domain
mybatis-plus.configuration.default-fetch-size=512

logging.path=./logs
logging.level.com.as.android.dao:debug
#日志文件的大小设置
logging.file.max-size=100MB


uploadFolder=E:/androidRepository/Documents/
uploadTmpFolder=E:/androidRepository/Documents/tmp/
uploadSaveFolder=E:/androidRepository/Documents/datafile/



#文件上传配置，单个文件最大
spring.servlet.multipart.max-file-size=200MB
#设置总上传数据总大小
spring.servlet.multipart.max-request-size=20000MB
#spring.mvc.static-path-pattern=/**表示所有的访问都经过静态资源路径；
spring.mvc.static-path-pattern=/**
#spring.resources.static-locations在这里配置静态资源路径，
# 前面说了这里的配置是覆盖默认配置，所以需要将默认的也加上否则static、public等这些路径将不能被当作静态资源路径，
# 在这个最末尾的file:${web.upload-path}之所有要加file:是因为指定的是一个具体的硬盘路径，其他的使用classpath指的是系统环境变量。
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:E:/androidRepository/Documents/datafile/

#下载的头部地址
#uploadHead = http://60.216.10.28:8280/cc8273de15f64cf2a3e885fee90a4e3b/
uploadHead = http://192.168.168.116:8280/cc8273de15f64cf2a3e885fee90a4e3b/